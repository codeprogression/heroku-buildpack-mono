#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

DEPENDENCY_S3_BUCKET_PATH=${DEPENDENCY_S3_BUCKET_PATH:-"http://s3.amazonaws.com/mono-dependencies"}
MONO_VERSION=${MONO_VERSION:-"3.2.8"}

BUILD_DIR=$1
CACHE_DIR=$2

function conditional_download() {
  DOWNLOAD_URL="$1"
  DESTINATION="$2"
  FRIENDLY_NAME="$3"

  if [ ! -d ${DESTINATION} ]; then
    rm -rf ${DESTINATION}
    mkdir -p ${DESTINATION}
    echo "       Downloading ${FRIENDLY_NAME}"
    curl -L ${DOWNLOAD_URL} -s | tar xz -C ${DESTINATION}
  else
    echo "       Using cached copy of ${FRIENDLY_NAME}"
  fi
}


LP_DIR=`cd $(dirname $0); cd ..; pwd`
cd ${BUILD_DIR}
mkdir -p ${CACHE_DIR}

echo "-----> Finding solution"
# find a solution file
SLN=$(find . -maxdepth 1 -iname "*.sln")
if [ $( echo "${SLN}" | wc -l ) -gt 1 ]; then
  echo "       Too many *.sln files"
  exit 1
fi

if [ "${SLN}" == "" ]; then
  echo "       No *.sln file found"
  exit 1
fi

echo "-----> Retrieving dependencies"

NUGET_CACHE_LOCATION="${CACHE_DIR}/nuget/NuGet.exe"
MONO_CACHE_LOCATION="${CACHE_DIR}/mono-${MONO_VERSION}"
conditional_download ${DEPENDENCY_S3_BUCKET_PATH}/mono-${MONO_VERSION}.tar.gz ${MONO_CACHE_LOCATION} "mono-${MONO_VERSION}"

if [ ! -f "${NUGET_CACHE_LOCATION}" ]; then
  echo "       Downloading NuGet"
  rm -rf $(dirname ${NUGET_CACHE_LOCATION})
  mkdir -p $(dirname ${NUGET_CACHE_LOCATION})
  NUGET_EXE="http://nuget.org/nuget.exe"
  curl -L ${NUGET_EXE} -s -o ${NUGET_CACHE_LOCATION}
  chmod a+x ${NUGET_CACHE_LOCATION}
else
  echo "       Using cached copy of NuGet"
fi

echo "-----> Preparing mono"

echo "       Copying mono to build directory"

cp -R "${MONO_CACHE_LOCATION}/mono" .
# TODO: this is done because `ln -s` causes nuget to fail in subtle ways. Fix please
# ln -s "$BUILD_DIR/mono" /app
cp -R "${MONO_CACHE_LOCATION}/mono" /app

echo "       Preparing build paths"
export PATH="/app/mono/bin:${PATH}"
export LD_LIBRARY_PATH="/app/mono/lib:${LD_LIBRARY_PATH}"

echo "       Enable mono execution"
chmod +x mono

echo "-----> Starting NuGet package restore"

echo "       Adding certs to trusted store"
cp -r ${LP_DIR}/.config ~/.
cp -r ${LP_DIR}/.config ${BUILD_DIR}/.

rm -rf /app/vendor/nuget

echo "       Generating NuGet script"
echo "#!/bin/bash" >> "/app/vendor/nuget"
echo "mozroots --import --sync" >> "/app/vendor/nuget"
echo "mono --runtime=v4.0.30319 --gc=sgen \"${NUGET_CACHE_LOCATION} update -self\""
echo "mono --runtime=v4.0.30319 --gc=sgen \"${NUGET_CACHE_LOCATION}\" \"\$@\"" >> "/app/vendor/nuget"
chmod a+x /app/vendor/nuget

echo "       Restoring NuGet packages"
/app/vendor/nuget restore ${SLN}

echo "-----> Building application"
xbuild /property:Configuration=Release /t:Rebuild ${SLN}

echo "-----> Build SUCCESS"
